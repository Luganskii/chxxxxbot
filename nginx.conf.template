# server {
#     # Listen on plain old HTTP and catch all requests so they can be redirected
#     # to HTTPS instead.
#     listen 80 default_server reuseport;
#     listen [::]:80 default_server reuseport;

#     # Anything requesting this particular URL should be served content from
#     # Certbot's folder so the HTTP-01 ACME challenges can be completed for the
#     # HTTPS certificates.
#     location '/.well-known/acme-challenge' {
#         default_type "text/plain";
#         root /var/www/letsencrypt;
#     }

#     # Everything else gets shunted over to HTTPS for each user defined
#     # server to handle.
#     location / {
#         return 301 https://$http_host$request_uri;
#     }
# }

server {
    # Listen to port 443 on both IPv4 and IPv6.
    listen 443 ssl;
    listen [::]:443 ssl;

    # Domain names this server should respond to.
    server_name ${NGINX_HOST};

    # Load the certificate files.
    ssl_certificate         /etc/letsencrypt/live/${NGINX_HOST}/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/${NGINX_HOST}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/${NGINX_HOST}/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

		location / {
			proxy_pass http://bot:${NGINX_PROXY_PORT};
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
		}
}

server {
    # Drop any request that does not match any of the other server names.
    listen               443 ssl default_server;
    ssl_reject_handshake on;
}